name: Waitslot Background Service Auto Build & Deploy

on:
  push:
    branches:
      - main
      - dev

jobs:
  Deploy-Dev:
    name: Deploy to AWS Serverless DEV
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: NPM run build
        run: |
          npm ci
          npm run build

      - name: Set up ENV
        run: |
          echo "${{ secrets.ENV_DEV_FILE }}" > .env

      - name: Serverless Deploy
        uses: serverless/github-action@v3.2
        with:
          args: -c "serverless deploy"
          entrypoint: /bin/sh
        env:
          # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          # or if using AWS credentials directly
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  Deploy-Prod:
    name: Deploy to AWS Serverless PROD
    runs-on: ubuntu-latest

    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: NPM run build
        run: |
          npm ci
          npm run build

      - name: Set up ENV
        run: |
          echo "${{ secrets.ENV_PROD_FILE }}" > .env

      - name: Serverless Deploy
        uses: serverless/github-action@v3.2
        with:
          args: -c "serverless deploy --stage prod"
          entrypoint: /bin/sh
        env:
          # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          # or if using AWS credentials directly
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
